<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	<context:property-placeholder location="classpath:jdbc.properties" />
	<context:component-scan base-package="org.lanqiao.pay"></context:component-scan>
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 数据源的其它信息 -->
		<property name="maxPoolSize" value="20"></property>
		<property name="minPoolSize" value="1"></property>
		<property name="acquireIncrement" value="11"></property>
		<property name="initialPoolSize" value="1"></property>
	</bean>
	<!-- mybatis的factoryBean -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="org.lanqiao.pay.base.entity"></property>
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:mybatis/*/*Mapper.xml" />
		<!-- mybatis的设置 -->

	</bean>
	<!-- 自动生成代理对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>
		<property name="basePackage" value="org.lanqiao.pay.mapper"></property>
	</bean>
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" />
		<!-- 	<tx:method name="finalRegistStep" isolation="SERIALIZABLE" timeout="15"/> -->
		</tx:attributes>
	</tx:advice>
	<!-- 用户提现时实现事物  孙航建 -->
    <aop:config>
       <!-- 配置事物切入点 -->
       <aop:pointcut expression="execution(* org.lanqiao.pay.serviceImpl.BankServiceImpl.updateUserAndBankCardMoney(..))" id="txPointCut"/>
       <aop:pointcut expression="execution(* org.lanqiao.pay.serviceImpl.BankServiceImpl.updateEnterpriseUserAndBankCardMoney(..))" id="txPointCut"/>
       <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>
	
<!-- 	<aop:config>
		<aop:pointcut expression="execution(void org.lanqiao.pay.service.*.*(..))"
			 id="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config> -->
	
	<context:component-scan base-package="org.lanqiao.pay"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="order" value="2"></property>
	</bean>
	<!-- 毋泽航:配置第二个视图解析器，根据名字跳转 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1"></property>
	</bean>
	<!-- 王增:配置国际化资源文件 -->
	<bean id="messageSource"
    	class="org.springframework.context.support.ResourceBundleMessageSource">
    	<property name="basename" value="i18n"></property>
    </bean>
    <!-- 王增:配置自动为匹配aspectJ注解的类生成代理对象 -->
   <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
   <!-- 王增:配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>   
    <!-- 配置邮件服务器发送邮件 -->
    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="123.206.71.118" />
        <property name="port" value="25" />
        <property name="username" value="ma@ifma.me" />
        <!-- 需要授权码（写自己的） -->
        <property name="password" value="mazhiyuan" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.timeout">50000</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.socketFactory.port">110</prop>
                <!-- TLS使用的是普通的Socket -->
                <!-- <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop> -->
                <prop key="mail.smtp.socketFactory.fallback">false</prop>
            </props>
        </property>
    </bean>
	<mvc:default-servlet-handler />
	<mvc:annotation-driven></mvc:annotation-driven>
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
</beans>